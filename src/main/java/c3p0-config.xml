<?xml version="1.0" encoding="UTF-8"?>
<c3p0-config>
   <!--默认配置-->
    <default-config>  
        <property name="initialPoolSize">10</property>  
        <property name="maxIdleTime">30</property>  
        <property name="maxPoolSize">100</property>  
        <property name="minPoolSize">10</property>  
        <property name="maxStatements">200</property>  
    </default-config>  

   <!--配置连接池mysql-->
    <named-config name="mysql">  
        <property name="driverClass">com.mysql.jdbc.Driver</property>  
        <property name="jdbcUrl">jdbc:mysql://localhost:3306/news</property>  
        <property name="user">root</property>  
        <property name="password">123456</property>  
        <property name="initialPoolSize">10</property>   <!--连接池初始化时创建的连接数,default : 3-->
        <property name="maxIdleTime">30</property>   <!--最大空闲时间，超过空闲时间的连接将被丢弃。为0或负数则永不丢弃。默认为0 单位 s-->
        <property name="maxPoolSize">100</property>   <!--连接池中保留的最大连接数。默认为15-->
        <property name="minPoolSize">10</property>   <!--连接池中保留的最小连接数。默认为15-->   
    </named-config>  
    
    <!--
			1.最常用配置
			
			initialPoolSize:连接池初始化时创建的连接数,default : 3（建议使用）
			
			minPoolSize:连接池保持的最小连接数,default : 3（建议使用）
			
			maxPoolSize:连接池中拥有的最大连接数，如果获得新连接时会使连接总数超过这个值则不会再获取新连接，而是等待其他连接释放，所以这个值有可能会设计地很大,default : 15（建议使用）
			
			acquireIncrement:连接池在无空闲连接可用时一次性创建的新数据库连接数,default : 3（建议使用）
			
			 
			
			2.管理连接池的大小和连接的生存时间
			
			maxConnectionAge:配置连接的生存时间，超过这个时间的连接将由连接池自动断开丢弃掉。当然正在使用的连接不会马上断开，而是等待它close再断开。配置为0的时候则不会对连接的生存时间进行限制。default : 0 单位 s（不建议使用）
			
			maxIdleTime:连接的最大空闲时间，如果超过这个时间，某个数据库连接还没有被使用，则会断开掉这个连接。如果为0，则永远不会断开连接,即回收此连接。default : 0 单位 s（建议使用）
			
			maxIdleTimeExcessConnection.s:这个配置主要是为了快速减轻连接池的负载，比如连接池中连接数因为某次数据访问高峰导致创建了很多数据连接，但是后面的时间段需要的数据库连接数很少，需要快速释放，必须小于maxIdleTime。其实这个没必要配置，maxIdleTime已经配置了。default : 0 单位 s（不建议使用）
			
			 
			
			3.配置连接测试：
			
			automaticTestTable:配置一个表名，连接池根据这个表名用自己的测试sql语句在这个空表上测试数据库连接,这个表只能由c3p0来使用，用户不能操作。default : null（不建议使用）
			
			preferredTestQuery:与上面的automaticTestTable二者只能选一。自己实现一条SQL检测语句。default : null（建议使用）
			
			idleConnectionTestPeriod:用来配置测试空闲连接的间隔时间。测试方式还是上面的两种之一，可以用来解决MySQL8小时断开连接的问题。因为它保证连接池会每隔一定时间对空闲连接进行一次测试，从而保证有效的空闲连接能每隔一定时间访问一次数据库，将于MySQL8小时无会话的状态打破。为0则不测试。default : 0(建议使用)
			
			testConnectionOnCheckin:如果为true，则在close的时候测试连接的有效性。default : false（不建议使用）
			
			testConnectionOnCheckout:性能消耗大。如果为true，在每次getConnection的时候都会测试，为了提高性能,尽量不要用。default : false（不建议使用）
			
			 
			
			4.配置PreparedStatement缓存：
			
			maxStatements:连接池为数据源缓存的PreparedStatement的总数。由于PreparedStatement属于单个Connection,所以这个数量应该根据应用中平均连接数乘以每个连接的平均PreparedStatement来计算。同时maxStatementsPerConnection的配置无效。default : 0（不建议使用）
			
			maxStatementsPerConnection:连接池为数据源单个Connection缓存的PreparedStatement数，这个配置比maxStatements更有意义，因为它缓存的服务对象是单个数据连接，如果设置的好，肯定是可以提高性能的。为0的时候不缓存。default : 0（看情况而论）
			
			 
			
			5.重连相关配置 
			
			acquireRetryAttempts:连接池在获得新连接失败时重试的次数，如果小于等于0则无限重试直至连接获得成功。default : 30（建议使用）
			
			acquireRetryDelay:连接池在获得新连接时的间隔时间。default : 1000 单位ms（建议使用）
			
			breakAfterAcquireFailure:如果为true，则当连接获取失败时自动关闭数据源，除非重新启动应用程序。所以一般不用。default : false（不建议使用）
			
			checkoutTimeout:配置当连接池所有连接用完时应用程序getConnection的等待时间。为0则无限等待直至有其他连接释放或者创建新的连接，不为0则当时间到的时候如果仍没有获得连接，则会抛出SQLException。其实就是acquireRetryAttempts*acquireRetryDelay。default : 0（与上面两个，有重复，选择其中两个都行）
			
			 
			
			6.定制管理Connection的生命周期
			
			connectionCustomizerClassName:用来定制Connection的管理，比如在Connection acquire 的时候设定Connection的隔离级别，或者在Connection丢弃的时候进行资源关闭，
			
			就可以通过继承一个AbstractConnectionCustomizer来实现相关方法，配置的时候使用全类名。有点类似监听器的作用。default : null（不建议使用）
			
			 
			
			7.配置未提交的事务处理 
			
			autoCommitOnClose:连接池在回收数据库连接时是否自动提交事务。如果为false，则会回滚未提交的事务，如果为true，则会自动提交事务。default : false（不建议使用）
			
			forceIgnoreUnresolvedTransactions：这个配置强烈不建议为true。default : false（不建议使用）
			
			一般来说事务当然由自己关闭了，为什么要让连接池来处理这种不细心问题呢？
			
			 
			
			8.配置debug和回收Connection
			
			unreturnedConnectionTimeout:为0的时候要求所有的Connection在应用程序中必须关闭。如果不为0，则强制在设定的时间到达后回收Connection，所以必须小心设置，保证在回收之前所有数据库操作都能够完成。这种限制减少Connection未关闭情况的不是很适用。建议手动关闭。default : 0 单位 s（不建议使用）
			
			debugUnreturnedConnectionStackTraces:如果为true并且unreturnedConnectionTimeout设为大于0的值，当所有被getConnection出去的连接unreturnedConnectionTimeout时间到的时候，就会打印出堆栈信息。只能在debug模式下适用，因为打印堆栈信息会减慢getConnection的速度default : false（不建议使用）
			
			 
			
			其他配置项：因为有些配置项几乎没有自己配置的必要，使用默认值就好，所以没有再写出来。




-->
    ......
    <!--配置连接池3-->
    ......
    <!--配置连接池4-->
    ......
</c3p0-config>